{"version":3,"sources":["components/VideoViewer/VideoControls.js","util/HlsUtils.js","util/DashUtils.js","components/VideoViewer/VideoPlayer.js","util/Mp4Info.js","components/SourceSelector/index.js","components/SplitView/index.js","util/formatTime.js","components/VideoViewer/TimeDisplay.js","components/VideoViewer/OffsetIndicator.js","keymap.js","components/Help/index.js","util/CopyClipboard.js","util/SourceUtils.js","components/VideoViewer/index.js","util/FullscreenUtils.js","App.js","serviceWorker.js","index.js"],"names":["VideoControls","onPlay","onStep","onFullscreen","playing","onSeek","position","duration","className","onClick","event","stopPropagation","cx","console","log","type","value","min","max","step","onInput","e","target","nextPos","parseFloat","isHlsPlaylist","url","split","endsWith","parseHlsManifest","a","fetch","response","text","manifestText","parser","Parser","push","end","manifest","variants","playlists","map","playlist","resolveVariantUrl","uri","bandwidth","attributes","BANDWIDTH","RESOLUTION","mainUrl","selectedVariant","variantUrl","indexOf","replace","parseDashManifest","parse","JSON","stringify","i","index","isDashManifest","VideoPlayer","props","state","zoom","panHorizontal","panVertical","onTimeUpdate","bind","onMetadataLoaded","setVideoRef","videoRef","videoElement","this","currentTime","onDurationSet","play","pause","pos","zoomFactor","newPanHorizontal","document","documentElement","clientWidth","newPanVertical","clientHeight","setState","deltaX","deltaY","offsetHeight","Promise","reject","resolve","addEventListener","once","variant","loadHls","loadDash","src","dash","setQualityFor","hls","currentLevel","detachMedia","attachSource","dashjs","MediaPlayer","create","updateSettings","streaming","fastSwitchEnabled","abr","autoSwitchBitrate","audio","video","initialize","Hls","loadSource","attachMedia","removeEventListener","width","parseInt","muted","ref","tabIndex","style","left","top","Component","fetchUntilDone","onData","isDone","chunkSize","startsWith","res","arrayBuffer","data","fileStart","start","fetchRange","responseData","totalSize","contentRange","Math","length","range","method","headers","ok","Error","status","get","contentLength","mp4Info","done","mp4boxfile","MP4Box","createFile","mp4InfoPromise","onError","onReady","info","appendBuffer","catch","SourceSelector","urlInputKeyDown","source","defaultSource","metadata","showUrlInput","visible","inputRef","input","mp4Metadata","videoTrack","videoTracks","bitrate","height","changeSource","keyCode","onUrlSelected","hideUrlInput","evt","files","onChange","name","file","window","URL","createObjectURL","setVariant","Object","assign","onVariantChange","loadHlsMetadata","loadDashMetadata","loadMp4Metadata","prevSource","loadMetadata","then","revokeObjectURL","prevProps","prevState","snapshot","focus","round","metadataSpan","options","key","selected","formatMetadata","onVariantSelected","title","cursor","onFileSelected","hidden","setInputRef","onBlur","defaultValue","currentUrl","renderSelectedSource","SplitView","mouseMove","mouseDown","mouseUp","splitPercent","dragStart","dragging","setSplitViewContainerRef","splitViewContainer","setSplitViewClipperRef","splitViewClipper","passive","ignoreNextClick","x","clientX","y","clientY","nextProps","nextState","tracking","setSplitPosition","onDrag","movementX","movementY","trackLocation","rect","getBoundingClientRect","pageX","offsetWidth","splitBorderVisible","leftSideContent","children","zeroPad","num","formatTime","hours","floor","minutes","seconds","frames","TimeDisplay","OffsetIndicator","offset","sign","command","keys","description","COMMANDS","PLAY","PAUSE","PLAY_PAUSE","STEP_FORWARD_FRAME","STEP_BACKWARD_FRAME","STEP_FORWARD","STEP_BACKWARD","FULLSCREEN","SHARE","TOGGLE_TRACKING","LEFT_ONLY","RIGHT_ONLY","TIMESHIFT_DECREASE","TIMESHIFT_INCREASE","TIMESHIFT_RESET","ZOOM_IN","ZOOM_OUT","PAN_UP","PAN_DOWN","PAN_RIGHT","PAN_LEFT","REST_PAN_ZOOM","TOGGLE_HELP","TOGGLE_SPLIT_BORDER_VISIBLE","KEY_MAP","reduce","result","Help","generateKeymapHelp","copyrightText","githubLink","HelpButton","href","copyToClipboard","dummy","createElement","body","appendChild","select","execCommand","removeChild","sourceType","isDashOrHls","urlParams","URLSearchParams","location","search","DEFAULT_SOURCE","av1","leftVideoUrl","rightVideoUrl","leftVideoVariant","Number","rightVideoVariant","startPosition","hideSourceSelector","Boolean","hideHelp","DEFAULT_SOURCE_LEFT","DEFAULT_SOURCE_RIGHT","VideoViewer","shortCutHandlers","playPause","fullscreen","toggleTracking","splitView","changeOffset","zoomIn","zoomOut","pan","resetPanZoom","createShareUrl","playForward","toggleShowHelp","toggleSplitBorderVisible","action","setVideoViewerRef","videoViewer","setRightVideoRef","rightVideo","setLeftVideoRef","leftVideo","setSplitViewRef","leftSource","rightSource","rightVideoOffset","showHelp","showSourceSelector","playReverse","userDefinedPanZoom","dir","onFullScreenChange","delta","seek","steps","newTime","quickSeek","elem","fullScreen","mozFullScreen","webkitIsFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","time","setPosition","playbackRate","all","setPlaying","alert","leftVariantParam","rightVariantParam","path","host","pathname","changeVariant","setLeftSource","setRightSource","pauseAndExecute","wasPlaying","wasPlayingReverse","trace","keyMap","handlers","dx","dy","size","n","onLeftSourceChange","onLeftVariantChange","onRightSourceChange","onRightVariantChange","App","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5fbcd03f.chunk.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport {FiPlay, FiPause, FiSkipBack, FiSkipForward, FiMaximize} from 'react-icons/fi';\n\n\nconst VideoControls = ({onPlay, onStep, onFullscreen, playing, onSeek, position, duration}) => {\n\n    return (<div className=\"controls\">\n        <button className=\"btn btn-default\" onClick={(event) => {\n            onStep(-1);\n            event.stopPropagation();\n        }}><FiSkipBack /></button>\n        <button className={cx('btn', 'btn-default') }\n                onClick={(event) => {\n                    console.log('play/pause: ' );\n                    onPlay();\n                    event.stopPropagation();\n                }}>{playing ? (<FiPause/>) : (<FiPlay />)}</button>\n        <button className=\"btn btn-default\" onClick={(event) => {\n            onStep(1);\n            event.stopPropagation();\n        }}><FiSkipForward/></button>\n\n        <input type=\"range\" value={position} min=\"0\" max={duration} step=\"0.04\" onInput={(e) => {\n            console.log(`range value: ${e.target.value}`);\n            const nextPos = parseFloat(e.target.value);\n            onSeek(nextPos);\n            e.stopPropagation();\n        }} />\n\n        <button className=\"btn btn-default glyphicon glyphicon-fullscreen\" onClick={(event) => {\n            onFullscreen();\n            event.stopPropagation();\n        }}><FiMaximize/></button>\n    </div>)\n};\n\nexport default VideoControls;","import {Parser} from 'm3u8-parser';\n\nexport function isHlsPlaylist(url) {\n    if (!url) return false;\n    return url.split('?')[0].endsWith('.m3u8');\n}\n\nexport async function parseHlsManifest(url) {\n    const response = await fetch(url);\n    const manifestText = await response.text();\n    const parser = new Parser();\n    parser.push(manifestText);\n    parser.end();\n    const manifest = parser.manifest;\n    const variants = manifest.playlists.map( playlist => {\n        return {\n            url: resolveVariantUrl(url, playlist.uri),\n            bandwidth: playlist.attributes.BANDWIDTH,\n            ...playlist.attributes.RESOLUTION,\n        };\n    });\n    return {\n        mainUrl: url,\n        variants,\n        selectedVariant: 0\n    };\n}\n\nfunction resolveVariantUrl(mainUrl, variantUrl) {\n    if (isAbsoluteUrl(variantUrl)) {\n        return variantUrl;\n    }\n    return mainUrl.replace(/\\/[^/]*$/, '/' + variantUrl)\n}\n\nfunction isAbsoluteUrl(url) {\n    return (url.indexOf('http://') === 0 || url.indexOf('https://') === 0)\n}","import {parse} from \"mpd-parser/src/\";\n\nexport async function parseDashManifest(url) {\n    const response = await fetch(url);\n    const manifestText = await response.text();\n    console.log(\"RAW DASH MANIFEST:\" + manifestText);\n    const manifest = parse(manifestText);\n    console.log(\"DASH MANIFEST:\\n\" + JSON.stringify(manifest));\n\n    const variants = manifest.playlists.map( (playlist, i) => {\n        return {\n            url: null,\n            index: i,\n            bandwidth: playlist.attributes.BANDWIDTH,\n            ...playlist.attributes.RESOLUTION,\n        };\n    });\n    return {\n        mainUrl: url,\n        variants,\n        selectedVariant: 0\n    };\n}\n\nexport function isDashManifest(url) {\n    if (!url) return false;\n    return url.split('?')[0].endsWith('.mpd');\n}\n","import React, {Component} from 'react';\nimport Hls from 'hls.js'\nimport dashjs from 'dashjs';\nimport {isHlsPlaylist} from \"../../util/HlsUtils\";\nimport {isDashManifest} from \"../../util/DashUtils\";\n\nconst zoomInMultiplier = 1.1;\nconst zoomOutMultiplier = 1/zoomInMultiplier;\n\nclass VideoPlayer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            zoom: 1,\n            panHorizontal: 0,\n            panVertical: 0\n        };\n        this.onTimeUpdate = this.onTimeUpdate.bind(this);\n        this.onMetadataLoaded = this.onMetadataLoaded.bind(this);\n        this.setVideoRef =  (videoRef) => {\n            this.videoElement = videoRef;\n        };\n    }\n\n    onTimeUpdate() {\n        if (this.props.onTimeUpdate) {\n            this.props.onTimeUpdate(this.videoElement.currentTime);\n        }\n    }\n\n    onMetadataLoaded() {\n        if (this.props.onDurationSet) {\n            this.props.onDurationSet(this.videoElement.duration);\n        }\n    }\n\n    async play() {\n        return this.videoElement.play();\n    }\n\n    pause() {\n        this.videoElement.pause();\n    }\n\n    quickSeek(pos) {\n        this.videoElement.currentTime = pos;\n    }\n\n    zoomIn() {\n        this.zoom(zoomInMultiplier);\n    }\n\n    zoomOut() {\n        this.zoom(zoomOutMultiplier);\n    }\n\n    zoom(zoomFactor) {\n        const newPanHorizontal = (1 - zoomFactor ) / 2 * document.documentElement.clientWidth +\n            zoomFactor * this.state.panHorizontal;\n        const newPanVertical = (1 - zoomFactor) / 2 * document.documentElement.clientHeight +\n            zoomFactor * this.state.panVertical;\n        this.setState({\n            zoom: this.state.zoom * zoomFactor,\n            panHorizontal: newPanHorizontal,\n            panVertical: newPanVertical\n        });\n    }\n\n    pan(deltaX, deltaY) {\n        this.setState({\n            panHorizontal: this.state.panHorizontal + deltaX,\n            panVertical: this.state.panVertical + deltaY});\n    }\n\n    resetPanZoom() {\n        const clientHeight = document.documentElement.clientHeight;\n        const videoElementHeight = this.videoElement.offsetHeight / this.state.zoom;\n        const panVertical = (clientHeight - videoElementHeight) / 2;\n        this.setState({\n            zoom: 1,\n            panHorizontal: 0,\n            panVertical: panVertical\n        });\n    }\n\n    async seek(pos) {\n        if (pos > this.videoElement.duration) {\n            return Promise.reject(`Invalid seek position: ${pos}, media duration is ${this.videoElement.duration}`);\n        }\n        return new Promise((resolve, reject) => {\n            this.videoElement.addEventListener('seeked', () => {\n                resolve();\n            }, { once: true});\n            this.videoElement.currentTime = pos;\n        })\n    }\n\n\n    async loadSource(url, variant) {\n        console.log(`load source: ${url} ${variant}`);\n        return new Promise((resolve, reject) => {\n            this.videoElement.addEventListener('canplay',\n                () => {\n                    resolve();\n                },\n                { once: true });\n            if (isHlsPlaylist(url)) {\n                this.loadHls(url, variant)\n            } else if (isDashManifest(url)) {\n                this.loadDash(url, variant);\n            } else {\n                this.videoElement.src = url;\n            }\n        });\n    }\n\n    setVariant(variant) {\n        console.log(`setVariant: ${variant}`);\n        if (this.state.dash) {\n            this.state.dash.setQualityFor('video', variant);\n        } else if (this.state.hls) {\n            this.state.hls.currentLevel = variant;\n        }\n    }\n\n    loadDash(url, variant) {\n        if (this.state.hls) {\n            this.state.hls.detachMedia();\n            this.setState({hls: null});\n        }\n        let dash = this.state.dash;\n        this.videoElement.addEventListener('canplay',\n            () => {\n                this.state.dash.setQualityFor('video', variant);\n            },\n            {once: true});\n        if (!dash) {\n            dash = dashjs.MediaPlayer().create();\n            this.setState({dash});\n            dash.updateSettings({\n                streaming: {\n                    fastSwitchEnabled: true,\n                    abr: {\n                        autoSwitchBitrate: {audio: false, video: false}\n                    }\n                }\n            });\n            dash.initialize(this.videoElement, url, false);\n        } else {\n            dash.attachSource(url);\n        }\n    }\n\n    loadHls(url, variant) {\n        this.setState({dash: null});\n        let hls = this.state.hls;\n        if (!hls) {\n            hls = new Hls();\n            this.setState({hls});\n        }\n        hls.loadSource(url);\n        hls.attachMedia(this.videoElement);\n        hls.currentLevel = variant;\n    }\n\n    currentTime() {\n        return this.videoElement.currentTime;\n    }\n\n    componentDidMount() {\n        this.videoElement.addEventListener('timeupdate', this.onTimeUpdate);\n        this.videoElement.addEventListener('loadedmetadata', this.onMetadataLoaded)\n    }\n\n    componentWillUnmount() {\n        this.videoElement.removeEventListener('timeupdate', this.onTimeUpdate);\n        this.videoElement.removeEventListener('loadedmetadata', this.onMetadataLoaded)\n    }\n\n    render() {\n        const width = parseInt(100 * this.state.zoom) + 'vw';\n        return (\n            <video muted={this.props.muted} ref={this.setVideoRef}\n                   tabIndex=\"-1\"\n                   style={{\n                       width: width,\n                       left: this.state.panHorizontal + 'px',\n                       top: this.state.panVertical + 'px'\n                   }}\n            >\n            </video>\n        )\n    }\n}\n\nexport default VideoPlayer;","import MP4Box from 'mp4box';\n\nasync function fetchUntilDone(url, onData,isDone, chunkSize = 10 * 1024 * 1024) {\n    if (url.startsWith(\"blob:\")) {\n        const res = await fetch(url);\n        const data = await res.arrayBuffer();\n        data.fileStart = 0;\n        onData(data);\n        return;\n    }\n    let start = 0;\n    let end = chunkSize;\n    while(!isDone()) {\n        const responseData = await fetchRange(url, {start, end});\n        const data = responseData.data;\n        const totalSize = parseInt(responseData.contentRange.split('/')[1]);\n        data.fileStart = start;\n        onData(data);\n        if (end === totalSize) break;\n        start = end;\n        end = Math.min(totalSize, start + chunkSize);\n        if (data.length  < chunkSize) break;\n    }\n}\n\nasync function fetchRange(url, range) {\n    const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n            'Range': `bytes=${range.start}-${range.end}`\n        }\n    });\n    if (!response.ok) {\n        throw Error(`Fetch failed with status: ${response.status}`);\n    }\n    return {\n        data: await response.arrayBuffer(),\n        contentLength: response.headers.get('Content-Length'),\n        contentRange:  response.headers.get('Content-Range')\n    }\n}\n\nexport async function mp4Info(url) {\n    console.log(`mp4Info: ${url}`);\n    let done = false;\n    const mp4boxfile = new MP4Box.createFile();\n\n    const mp4InfoPromise = new Promise((resolve, reject) => {\n        mp4boxfile.onError = e => {\n            done = true;\n            console.log(e);\n            reject(e);\n        };\n\n        mp4boxfile.onReady = (info) => {\n            done = true;\n            resolve(info);\n        };\n\n\n    fetchUntilDone(url,\n        (data) => {\n            mp4boxfile.appendBuffer(data)\n        },\n        () => done)\n        .catch(e => {\n            reject(e);\n        });\n\n    });\n\n    return mp4InfoPromise\n}","import React, {Component} from 'react';\nimport {FiFile, FiGlobe} from \"react-icons/fi\";\nimport cx from 'classnames';\nimport './index.css';\nimport {isHlsPlaylist, parseHlsManifest} from '../../util/HlsUtils';\nimport {mp4Info} from '../../util/Mp4Info';\nimport {isDashManifest, parseDashManifest} from \"../../util/DashUtils\";\n\nclass SourceSelector extends Component {\n\n    constructor(props) {\n        super(props);\n        this.stopPropagation = this.stopPropagation.bind(this);\n        this.urlInputKeyDown = this.urlInputKeyDown.bind(this);\n        this.state = {\n            source: this.props.defaultSource,\n            metadata: null,\n            showUrlInput: false,\n            visible: this.props.visible\n        };\n    }\n\n    setInputRef(inputRef) {\n        this.input = inputRef;\n    }\n\n    async loadHlsMetadata(url) {\n        const metadata = await parseHlsManifest(url);\n        this.setState({metadata});\n    }\n\n    async loadDashMetadata(url) {\n        const metadata = await parseDashManifest(url);\n        this.setState({metadata})\n    }\n\n    async loadMp4Metadata(url) {\n        try {\n            const mp4Metadata = await mp4Info(url);\n\n            const videoTrack = mp4Metadata.videoTracks[0];\n            const metadata = {\n                variants: [\n                    {\n                        bitrate: videoTrack.bitrate,\n                        width: videoTrack.video.width,\n                        height: videoTrack.video.height\n                    }\n                ]\n            };\n            this.setState({metadata})\n        } catch(e) {\n            console.log(`Failed to get mp4 info: ${e}`);\n        }\n    }\n\n    componentDidMount() {\n        this.changeSource(this.state.source);\n        console.log('Source selector add event listeners');\n        this.input.addEventListener('keydown', this.urlInputKeyDown);\n        this.input.addEventListener('keypress', this.stopPropagation);\n        this.input.addEventListener('keyup', this.stopPropagation);\n    }\n\n    componentWillUnmount() {\n        this.input.removeEventListener('keydown', this.urlInputKeyDown);\n        this.input.removeEventListener('keypress', this.stopPropagation);\n        this.input.removeEventListener('keyup', this.stopPropagation);\n    }\n\n    stopPropagation(e) {\n        e.stopPropagation();\n    }\n\n    urlInputKeyDown(e) {\n        e.stopPropagation();\n        switch (e.keyCode) {\n            case 13:\n                this.onUrlSelected(e.target.value);\n                break;\n            case 27:\n                this.hideUrlInput();\n                break;\n            default:\n        }\n    }\n\n    onBlur() {\n        console.log('onBlur');\n        this.setState({showUrlInput: false})\n    }\n\n    handleChange(evt) {\n        if (evt.target.files) {\n            this.props.onChange(evt.target.files[0])\n        }\n    }\n\n    showUrlInput() {\n        this.setState({showUrlInput: true});\n    }\n\n    hideUrlInput() {\n        this.setState({showUrlInput: false});\n    }\n\n    onUrlSelected(url) {\n        console.log(`url: ${url}`);\n        this.hideUrlInput();\n        let type = 'url';\n        if (isHlsPlaylist(url)) {\n            type = 'hls';\n        } else if (isDashManifest(url)) {\n            type = 'dash';\n        }\n        this.changeSource({\n            type,\n            name: url,\n            url: url,\n            variant: 0\n        })\n    }\n\n    onFileSelected(evt) {\n        if (evt.target.files && evt.target.files[0]) {\n            const file = evt.target.files[0];\n            this.changeSource({\n                type: 'file',\n                name: file.name,\n                url: window.URL.createObjectURL(file),\n            });\n        }\n    }\n\n    onVariantSelected(evt) {\n        const selectedVariant = parseInt(evt.target.value);\n        this.setVariant(selectedVariant);\n    }\n\n    setVariant(selectedVariant) {\n        const source = Object.assign({}, this.state.source, {variant: selectedVariant});\n        this.setState({source});\n        if (this.props.onVariantChange) {\n            this.props.onVariantChange(selectedVariant);\n        }\n    }\n\n    async loadMetadata(source) {\n        if (source.type === 'hls') {\n            await this.loadHlsMetadata(source.url)\n        } else if (source.type === 'dash') {\n            await this.loadDashMetadata(source.url);\n        } else {\n            await this.loadMp4Metadata(source.url);\n        }\n    }\n\n    changeSource(source) {\n        const prevSource = this.state.source;\n        this.loadMetadata(source)\n            .then(() => {\n                this.setState({source});\n                this.props.onChange(Object.assign({}, source));\n                if (prevSource.type === 'file' && prevSource.url) {\n                    window.URL.revokeObjectURL(prevSource.url);\n                }\n            });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.showUrlInput) {\n            this.input.focus()\n        }\n    }\n\n    currentUrl() {\n        return this.state.source.type === 'file' ? '' : this.state.source.url;\n    }\n\n    formatMetadata(bitrate, width, height) {\n        return `[${Math.round(bitrate / 1000)}kbit/s ${width}x${height}]`\n    }\n\n    renderSelectedSource() {\n        if (this.state.showUrlInput) {\n            return null;\n        }\n        const metadata = this.state.metadata;\n        let metadataSpan = null;\n        if (metadata) {\n            if (metadata.variants.length > 1) {\n                const options = metadata.variants.map( (variant, i) => {\n                    return (<option\n                        key={i}\n                        value={i}\n                        selected={i === this.state.source.variant}\n                    >\n                        {this.formatMetadata(variant.bandwidth,variant.width, variant.height)}\n                    </option>);\n                });\n                metadataSpan = (<select value={this.state.selectedVariant} onChange={(e) => this.onVariantSelected(e)}>{options}</select>);\n            } else if (metadata.variants.length === 1) {\n                const variant = metadata.variants[0];\n                metadataSpan = (<span>{this.formatMetadata(variant.bitrate, variant.width, variant.height)}</span>);\n            }\n        }\n        return (<div className=\"source-metadata\">\n            <div className=\"source-name\" title={this.state.source.name}>{this.state.source.name}</div>\n            <div>{metadataSpan}</div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <div className={cx(\"source-selector\", this.props.className, {'hidden': !this.props.visible})}>\n                <div className=\"source-buttons\">\n                    <div title=\"open URL\" className=\"url-button\" >\n                        <FiGlobe style={{cursor: 'pointer'}} onClick={() => this.showUrlInput()}/>\n                    </div>\n                    <label title=\"open local file\" className=\"source-file-input\" onClick={(evt) => {\n                        this.hideUrlInput();\n                        evt.stopPropagation()\n                    }}>\n                        <FiFile/>\n                        <input type=\"file\" onChange={(evt) => this.onFileSelected(evt) }/>\n                    </label>\n                </div>\n\n                <input className={cx('url-input',\n                    {hidden: !this.state.showUrlInput})}\n                       type=\"text\"\n                       ref={(ref) => this.setInputRef(ref)}\n                       onBlur={() => this.onBlur()}\n                       defaultValue={this.currentUrl()}\n                />\n\n                {this.renderSelectedSource()}\n\n            </div>\n        )\n    }\n}\n\nexport default SourceSelector;","import  React, {Component} from 'react';\nimport cx from 'classnames';\nimport './index.css';\n\n\nclass SplitView extends Component {\n    constructor(props) {\n        super(props);\n        this.mouseMove = this.mouseMove.bind(this);\n        this.mouseDown = this.mouseDown.bind(this);\n        this.mouseUp = this.mouseUp.bind(this);\n        console.log('Split view constructor');\n\n        this.state = {\n            splitPercent: 0,\n            dragStart: null,\n            dragging: false\n        };\n\n        this.setSplitViewContainerRef = splitViewContainer => {\n            this.splitViewContainer = splitViewContainer;\n\n        };\n\n        this.setSplitViewClipperRef = splitViewClipper => {\n            this.splitViewClipper = splitViewClipper;\n        };\n    }\n\n    componentDidMount() {\n        this.splitViewContainer.addEventListener(\"mousemove\", this.mouseMove, {passive: true});\n        this.splitViewContainer.addEventListener(\"mousedown\", this.mouseDown);\n        document.addEventListener(\"mouseup\", this.mouseUp);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"mouseup\", this.mouseUp);\n        this.splitViewContainer.removeEventListener(\"mousedown\", this.mouseDown);\n        this.splitViewContainer.removeEventListener(\"mousemove\", this.mouseMove, {passive: true});\n    }\n\n    mouseUp(e) {\n        if (this.state.dragging) {\n            this.ignoreNextClick = true;\n        }\n        this.setState({dragStart: null, dragging: false});\n    }\n\n    onClick(e) {\n        if (this.ignoreNextClick) {\n            this.ignoreNextClick = false;\n        } else {\n            this.props.onClick(e);\n        }\n    }\n\n    mouseDown(e) {\n        this.setState({dragStart: {x: e.clientX, y: e.clientY}});\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return true;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.tracking && !prevProps.tracking) {\n            this.setSplitPosition(this.state.splitPercent);\n        }\n    }\n\n    mouseMove(e) {\n        if (this.state.dragStart) {\n            this.setState({dragging: true});\n            this.props.onDrag(e.movementX, e.movementY);\n        } else {\n            this.trackLocation(e);\n        }\n    }\n\n    trackLocation(e) {\n        if (!this.splitViewContainer) {\n            return;\n        }\n        const rect = this.splitViewContainer.getBoundingClientRect();\n        const position = ((e.pageX - rect.left) / this.splitViewContainer.offsetWidth)*100;\n        if (position <= 100) {\n            this.setState({splitPercent: position});\n            if (this.props.tracking) {\n                this.setSplitPosition(position);\n            }\n        }\n    }\n\n    setSplitPosition(position) {\n        this.splitViewClipper.style.width = position+\"%\";\n    }\n\n    focus() {\n        this.splitViewContainer.focus();\n    }\n\n    render() {\n        return (\n            <div className={cx('split-view-container', {'dragging': this.state.dragging})} ref={(ref) => this.setSplitViewContainerRef(ref)}\n            tabIndex=\"-1\"\n            onClick={(e) => this.onClick(e) }>\n                <div className={cx(\"split-view-clipper\", {\"show-border\": this.props.splitBorderVisible})} ref={(ref) => this.setSplitViewClipperRef(ref)}>\n                    {this.props.leftSideContent}\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default SplitView;\n","function formatTime(position) {\n    const hours = Math.floor(position / 3600);\n    const minutes = Math.floor((position % 3600) / 60);\n    const seconds = Math.floor(position % 60);\n    const frames = Math.floor((position - Math.floor(position)) / 0.04);\n    return zeroPad(hours) + ':' + zeroPad(minutes) + ':'\n        + zeroPad(seconds) + '.' + zeroPad(frames);\n}\n\nfunction zeroPad(num) {\n    return num < 10 ? '0' + num : '' + num;\n}\n\nexport default formatTime;","import React from 'react';\nimport formatTime from '../../util/formatTime';\n\nconst TimeDisplay = ({position}) => (<div className=\"time-display\">{formatTime(position)}</div>);\n\nexport default TimeDisplay;","import React from 'react';\n\nfunction sign(offset) {\n    return offset > 0 ? '+' : '';\n}\n\nconst OffsetIndicator = ({offset}) => {\n    if (offset === 0.0) {\n        return null;\n    }\n    return (<div className=\"offset-indicator\">offset: {sign(offset)}{offset * 0.04}</div>)\n};\n\nexport default OffsetIndicator;","\n\nconst command = (name, keys, description) => ({\n        name,\n        keys,\n        description\n});\n\nexport const COMMANDS = {\n        PLAY: command('PLAY', 'l', 'Play video'),\n        PAUSE: command('PAUSE', 'k', 'Pause video'),\n        PLAY_PAUSE: command('PLAY_PAUSE', 'space', 'Play/Pause video'),\n        STEP_FORWARD_FRAME: command('STEP_FORWARD_FRAME', '.', 'Step forward 1 frame'),\n        STEP_BACKWARD_FRAME: command('STEP_BACKWARD_FRAME', ',', 'Step backward 1 frame'),\n        STEP_FORWARD: command('STEP_FORWARD', ['/', '-'], 'Step forward 1 second'),\n        STEP_BACKWARD: command('STEP_BACKWARD', 'm', 'Step backward 1 second'),\n        FULLSCREEN: command('FULLSCREEN', 'f', 'Toggle full screen'),\n        SHARE: command('SHARE', 'c', 'Copy shareable url to clipboard'),\n        TOGGLE_TRACKING: command('TOGGLE_TRACKING', 't', 'Toggle split position follows mouse'),\n        LEFT_ONLY: command('LEFT_ONLY', ']', 'View only left video'),\n        RIGHT_ONLY: command('RIGHT_ONLY', '[', 'View only right video'),\n        TIMESHIFT_DECREASE: command('OFFSET_DECREASE', '<', 'Decrease timeshift between videos'),\n        TIMESHIFT_INCREASE: command('OFFSET_INCREASE', '>', 'Increase timeshift between videos'),\n        TIMESHIFT_RESET: command('OFFSET_RESET', 'r', 'Reset timeshift between videos'),\n        ZOOM_IN: command('ZOOM_IN', 'u', 'Zoom in'),\n        ZOOM_OUT: command('ZOOM_OUT', 'i', 'Zoom out'),\n        PAN_UP: command('PAN_UP', 'up', 'Pan up'),\n        PAN_DOWN: command('PAN_DOWN', 'down', 'Pan down'),\n        PAN_RIGHT: command('PAN_RIGHT', 'right', 'Pan right'),\n        PAN_LEFT: command('PAN_LEFT', 'left', 'Pan left'),\n        REST_PAN_ZOOM: command('RESET_PAN_ZOOM', '0', 'Reset pan and zoom to default'),\n        TOGGLE_HELP: command('TOOGLE_HELP', 'esc', 'Toggle help window'),\n        TOGGLE_SPLIT_BORDER_VISIBLE: command('TOGGLE_SPLIT_BORDER_VISIBLE', 's', 'Toggle split border visible')\n};\n\n\nexport const KEY_MAP = Object.keys(COMMANDS).reduce((result, key) => Object.assign(result, {[COMMANDS[key].name]: COMMANDS[key].keys}), {});\n\nconsole.log(`KEY_MAP: ${JSON.stringify(KEY_MAP)}`);","import React from 'react';\nimport cx from 'classnames';\nimport {FiHelpCircle, FiX} from \"react-icons/fi\";\nimport './index.css';\nimport {COMMANDS} from '../../keymap';\n\n\nconst Help = ({visible, onClick}) => (\n    <div className={cx('help', {'hidden': !visible})}>\n        <div className='help-header'>\n            <h3 className={\"padding10\"}>Vivict - Vivict Video Comparison Tool</h3>\n            <div className='close-button' onClick={() => onClick()}>\n                <FiX />\n            </div>\n        </div>\n        <div>\n            <h4 className={\"padding10\"}>Keybindings:</h4>\n            {generateKeymapHelp()}\n            {copyrightText()}\n            {githubLink()}\n        </div>\n    </div>);\n\nconst HelpButton = ({onClick, className}) => (\n    <div className={\"help-button \" + className}\n    onClick={(e) => onClick(e)}>\n        <FiHelpCircle/>\n    </div>\n);\n\nconst generateKeymapHelp = () => {\n    //return Array.from(KEY_MAP, ([key, value]) => (\n    return Object.keys(COMMANDS).map(key => {\n        const command = COMMANDS[key];\n        return (\n            <div key={\"keybinding-\" + command.name}><span className={\"bold\"}>{command.keys}</span>{\"  \" + command.description}</div>\n        )\n    });\n};\n\nconst copyrightText = () => {\n    return (\n        <h4 className={\"padding10\"}>Copyright 2019 Sveriges Television AB.</h4>\n    )\n};\n\nconst githubLink = () => {\n    return <a href=\"https://github.com/SVT/vivict\" >Contribute on Github, released under MIT</a>\n};\n\nexport {Help, HelpButton}","export function copyToClipboard(text) {\n    let dummy = document.createElement(\"textarea\");\n    document.body.appendChild(dummy);\n    dummy.value = text;\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n}","import {isHlsPlaylist} from \"./HlsUtils\";\nimport {isDashManifest} from \"./DashUtils\";\n\nexport function sourceType(url) {\n    if (isHlsPlaylist(url)) {\n        return 'hls'\n    }\n    if (isDashManifest(url)) {\n        return 'dash';\n    }\n    return 'url';\n}\n\nexport function isDashOrHls(type) {\n    return type === 'hls' || type === 'dash';\n}","import React, {Component} from 'react';\nimport {HotKeys} from 'react-hotkeys';\nimport VideoControls from './VideoControls';\nimport VideoPlayer from './VideoPlayer';\nimport './index.css';\nimport SourceSelector from '../SourceSelector'\nimport SplitView from '../SplitView';\nimport TimeDisplay from './TimeDisplay';\nimport OffsetIndicator from './OffsetIndicator';\nimport {Help, HelpButton} from '../Help';\nimport {COMMANDS, KEY_MAP} from '../../keymap'\nimport {openFullscreen, isFullscreen, closeFullscreen} from \"../../util/FullscreenUtils\";\nimport {copyToClipboard} from \"../../util/CopyClipboard\";\nimport {FiPlay} from 'react-icons/fi';\nimport cx from 'classnames';\nimport {isHlsPlaylist} from \"../../util/HlsUtils\";\nimport {isDashOrHls, sourceType} from \"../../util/SourceUtils\";\n\nconst DEFAULT_SOURCES = {\n    hls: \"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\",\n    dash: \"https://dash.akamaized.net/dash264/TestCases/2a/qualcomm/1/MultiResMPEG2.mpd\",\n    av1: \"https://storage.googleapis.com/bitmovin-demos/av1/stream.mpd\"\n};\n\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst DEFAULT_SOURCE = DEFAULT_SOURCES[urlParams.get('defaultSource') ? urlParams.get('defaultSource') : 'hls'];\nconst leftVideoUrl = urlParams.get('leftVideoUrl') || DEFAULT_SOURCE;\nconst rightVideoUrl = urlParams.get('rightVideoUrl') || leftVideoUrl;\nconst leftVideoVariant = Number(urlParams.get('leftVideoVariant')) || 0;\nconst rightVideoVariant = Number(urlParams.get('rightVideoVariant')) || 0;\nconst startPosition = Number(urlParams.get('position')) || 0;\nconst hideSourceSelector = Boolean(urlParams.get('hideSourceSelector'));\nconst hideHelp = Boolean(urlParams.get('hideHelp'));\n\nconst DEFAULT_SOURCE_LEFT = {\n    type: sourceType(leftVideoUrl),\n    name: leftVideoUrl,\n    url: leftVideoUrl,\n    variant: leftVideoVariant,\n    position: startPosition\n};\nconst DEFAULT_SOURCE_RIGHT = {\n    type:  sourceType(rightVideoUrl),\n    name: rightVideoUrl,\n    url: rightVideoUrl,\n    variant: rightVideoVariant,\n    position: startPosition\n};\n\nclass VideoViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.setVideoViewerRef = videoViewer => {\n            this.videoViewer = videoViewer;\n        };\n        this.setRightVideoRef = rightVideo => {\n            console.log('setRightVideoRef', rightVideo);\n            this.rightVideo = rightVideo;\n        };\n        this.setLeftVideoRef = leftVideo => {\n            this.leftVideo = leftVideo;\n        };\n        this.setSplitViewRef = splitView => {\n            this.splitView = splitView;\n        };\n        this.state = {\n            playing: false,\n            duration: 0,\n            position: 0,\n            leftSource: {name: \"NONE\", url: null, variant: leftVideoVariant},\n            rightSource:{name: \"NONE\", url: null, variant: rightVideoVariant},\n            tracking: true,\n            splitBorderVisible: true,\n            rightVideoOffset: 0,\n            showHelp: !hideHelp,\n            showSourceSelector: !hideSourceSelector,\n            playReverse: false,\n            userDefinedPanZoom: false\n        };\n        console.dir(this.state);\n\n        this.onFullScreenChange = this.onFullScreenChange.bind(this);\n    }\n\n    setPosition(position) {\n        this.setState({position});\n    }\n\n    setPlaying(playing) {\n        this.setState({playing})\n    }\n\n    setLeftSource(leftSource) {\n        this.setState({leftSource})\n    }\n\n    setRightSource(rightSource) {\n        this.setState({rightSource})\n    }\n\n    toggleTracking() {\n        this.setState({tracking: !this.state.tracking})\n    }\n\n    changeOffset(delta) {\n\n        if(delta === 0) {\n            this.setState({rightVideoOffset: delta});\n        } else {\n            this.setState({rightVideoOffset: this.state.rightVideoOffset + delta});\n        }\n\n        if (!this.state.playing) {\n            this.seek(this.leftVideo.currentTime());\n        } else {\n            this.pause()\n                .then(() => this.play())\n        }\n    }\n\n    playPause() {\n        if(this.state.playing) {\n            this.pause();\n        } else {\n            this.play();\n        }\n    }\n\n    async step(steps) {\n        const newTime = this.rightVideo.currentTime() + 0.04 * steps;\n        this.rightVideo.quickSeek(newTime);\n        this.leftVideo.quickSeek(newTime);\n    }\n\n    fullscreen() {\n        if(isFullscreen()) {\n            closeFullscreen();\n        } else {\n            openFullscreen(this.videoViewer);\n        }\n    }\n\n    onTimeUpdate(time) {\n        this.setPosition(time);\n    }\n\n    onDurationSet(duration) {\n        this.setState({duration})\n    }\n\n    syncPlayers() {\n        this.leftVideo.seek(this.rightVideo.currentTime());\n        this.setPosition(this.leftVideo.currentTime());\n    }\n\n    async playForward() {\n        if (this.state.playing) {\n            await this.pause();\n        }\n        this.leftVideo.playbackRate = 1;\n        this.rightVideo.playbackRate = 1;\n        return this.play();\n    }\n\n    async play() {\n        if(this.state.playing) {\n            return Promise.resolve();\n        }\n        await Promise.all([this.rightVideo.play(), this.leftVideo.play()])\n        this.setPlaying(true);\n\n    }\n\n    async createShareUrl() {\n        if (this.state.leftSource.type === 'file' || this.state.rightSource.type === 'file') {\n            alert(\"Shareable URL cannot be created since you are viewing a local file!\");\n        } else {\n            const leftVariantParam = isDashOrHls(this.state.leftSource.type) ?\n                `&leftVideoVariant=${this.state.leftSource.variant}` : \"\";\n            const rightVariantParam = isDashOrHls(this.state.rightSource.type) ?\n                `&rightVideoVariant=${this.state.rightSource.variant}` : \"\";\n            const path = `${window.location.host}${window.location.pathname}?position=${this.state.position}`\n            + `&leftVideoUrl=${this.state.leftSource.url}${leftVariantParam}`\n            + `&rightVideoUrl=${this.state.rightSource.url}${rightVariantParam}`\n            + (urlParams.get('hideSourceSelector') ? `&hideSourceSelector=${urlParams.get('hideSourceSelector')}` : \"\")\n            + (urlParams.get('hideHelp') ? `&hideHelp=${urlParams.get('hideHelp')}` : \"\")\n            console.log(\"Copying to clipboard: \" + path);\n            copyToClipboard(path)\n        }\n    }\n\n    async pause() {\n        if (!this.state.playing) {\n            return Promise.resolve();\n        }\n        this.rightVideo.pause();\n        this.leftVideo.pause();\n        this.setPlaying(false);\n        return this.seek(this.leftVideo.currentTime());\n    }\n\n    async seek(pos) {\n        this.setState({position: pos});\n        return Promise.all([this.leftVideo.seek(pos), this.rightVideo.seek(pos + this.state.rightVideoOffset * 0.04)]);\n    }\n\n    async onLeftVariantChange(variant) {\n        console.log(`left variant changed: ${JSON.stringify(variant)}`);\n        await this.changeVariant(this.leftVideo, variant)\n    }\n\n    async onRightVariantChange(variant) {\n        console.log(`right variant changed: ${JSON.stringify(variant)}`);\n        await this.changeVariant(this.rightVideo, variant)\n    }\n\n    async onLeftSourceChange(source) {\n        await this.changeSource(this.leftVideo, source);\n        this.setLeftSource(source);\n        this.splitView.focus();\n    }\n\n    async onRightSourceChange(source) {\n        await this.changeSource(this.rightVideo, source);\n        this.setRightSource(source);\n        this.splitView.focus();\n    }\n\n    async changeVariant(videoElement, variant) {\n        this.pauseAndExecute(videoElement, async () => {\n            this.setState({leftSource: Object.assign({}, this.state.leftSource, {variant})});\n            await videoElement.setVariant(variant);\n            //await this.step(0); // Seek to current time to improve dash switching time?\n        });\n    }\n\n    async changeSource(videoElement, source) {\n        console.log(`Change source ${source.url} ${source.variant}`);\n        this.pauseAndExecute(videoElement, async () => {\n            await videoElement.loadSource(source.url, source.variant);\n        });\n    }\n\n    async pauseAndExecute(videoElement, action) {\n        const wasPlaying = this.state.playing;\n        const wasPlayingReverse = this.state.playReverse;\n        await this.pause();\n        const time = videoElement.currentTime();\n        console.log(`${JSON.stringify(videoElement.props)} time: ${time}`);\n        await action();\n        await this.seek(time);\n        if (wasPlaying) {\n            await this.play();\n        }\n        if (wasPlayingReverse) {\n            await this.playReverse();\n        }\n    }\n\n    zoomIn() {\n        this.leftVideo.zoomIn();\n        this.rightVideo.zoomIn();\n        this.setState({userDefinedPanZoom: true});\n    }\n\n    zoomOut() {\n        this.leftVideo.zoomOut();\n        this.rightVideo.zoomOut();\n        this.setState({userDefinedPanZoom: true});\n    }\n\n    resetPanZoom() {\n        this.leftVideo.resetPanZoom();\n        this.rightVideo.resetPanZoom();\n        this.setState({userDefinedPanZoom: false});\n    }\n\n    pan(deltaX, deltaY) {\n        this.leftVideo.pan(deltaX, deltaY);\n        this.rightVideo.pan(deltaX, deltaY);\n        this.setState({userDefinedPanZoom: true});\n    }\n\n    shortCutHandlers = [\n        [COMMANDS.STEP_FORWARD, () => this.step(25)],\n        [COMMANDS.STEP_FORWARD_FRAME, () => this.step(1)],\n        [COMMANDS.STEP_BACKWARD_FRAME, () => this.step(-1)],\n        [COMMANDS.STEP_BACKWARD, () => this.step(-25)],\n        [COMMANDS.PLAY_PAUSE, () => this.playPause()],\n        [COMMANDS.FULLSCREEN, () => this.fullscreen()],\n        [COMMANDS.TOGGLE_TRACKING, () => this.toggleTracking()],\n        [COMMANDS.LEFT_ONLY, () => this.splitView.setSplitPosition(100)],\n        [COMMANDS.RIGHT_ONLY, () => this.splitView.setSplitPosition(0)],\n        [COMMANDS.TIMESHIFT_INCREASE, () => this.changeOffset(1)],\n        [COMMANDS.TIMESHIFT_DECREASE, () => this.changeOffset(-1)],\n        [COMMANDS.TIMESHIFT_RESET, () => this.changeOffset(0)],\n        [COMMANDS.ZOOM_IN, () => this.zoomIn()],\n        [COMMANDS.ZOOM_OUT, () => this.zoomOut()],\n        [COMMANDS.PAN_UP, () => this.pan(0, 10)],\n        [COMMANDS.PAN_DOWN, () => this.pan(0, -10)],\n        [COMMANDS.PAN_RIGHT, () => this.pan(-10, 0)],\n        [COMMANDS.PAN_LEFT, () => this.pan(10, 0)],\n        [COMMANDS.REST_PAN_ZOOM, () => this.resetPanZoom()],\n        [COMMANDS.SHARE, () => this.createShareUrl()],\n        [COMMANDS.PLAY, () => this.playForward()],\n        [COMMANDS.PAUSE, () => this.pause()],\n        [COMMANDS.TOGGLE_HELP, () => this.toggleShowHelp()],\n        [COMMANDS.TOGGLE_SPLIT_BORDER_VISIBLE, () => this.toggleSplitBorderVisible()]\n    ].reduce((result, [command, action]) => Object.assign(result, {[command.name]: action}), {});\n\n    toggleShowHelp() {\n        this.setState({showHelp: !this.state.showHelp});\n    }\n\n    toggleSplitBorderVisible() {\n        this.setState({splitBorderVisible: !this.state.splitBorderVisible});\n    }\n\n    onFullScreenChange() {\n        if (!this.state.userDefinedPanZoom) {\n            this.resetPanZoom();\n        }\n    }\n\n    componentDidMount() {\n        this.splitView.focus();\n        this.seek(startPosition)\n            .catch(e => console.trace(e));\n        this.videoViewer.addEventListener('fullscreenchange', this.onFullScreenChange);\n    }\n\n    componentWillUnmount(){\n        this.videoViewer.removeEventListener('fullscreenchange', this.onFullScreenChange);\n    }\n\n    render() {\n\n        return (\n            <div className=\"video-viewer\"\n                 tabIndex=\"0\"\n                 ref={this.setVideoViewerRef}>\n                <TimeDisplay position={this.state.position}/>\n                <HotKeys className=\"hotkeys-div\" keyMap={KEY_MAP} handlers={this.shortCutHandlers}>\n                    <SplitView tracking={this.state.tracking}\n                               splitBorderVisible={this.state.splitBorderVisible}\n                               onDrag={(dx,dy) => this.pan(dx,dy)}\n                               onClick={() => this.playPause()}\n                               ref={this.setSplitViewRef}\n                               leftSideContent={(<VideoPlayer muted ref={this.setLeftVideoRef} />)}\n                    >\n\n                        <VideoPlayer ref={this.setRightVideoRef}\n                                     onTimeUpdate={(time) => this.onTimeUpdate(time)}\n                                     onDurationSet={(duration) => this.onDurationSet(duration)}\n                        />\n                        <div className={cx(\"big-play-button\", {\n                            \"hidden\": this.state.playing || this.state.position !== 0\n                        })}\n                             onClick={() => this.play()}\n                        >\n                            <FiPlay size=\"32px\"/>\n                        </div>\n                    </SplitView>\n\n                    <VideoControls visible={this.state.showSourceSelector}\n                                   playing={this.state.playing}\n                                   onPlay={() => this.playPause()}\n                                   onStep={(n) => this.step(n)}\n                                   onFullscreen={() => this.fullscreen()}\n                                   duration={this.state.duration}\n                                   onSeek={(pos) => this.seek(pos)}\n                                   position={this.state.position}\n                    />\n\n                    <SourceSelector visible={this.state.showSourceSelector}\n                                    className=\"left-source-selector\"\n                                    defaultSource={DEFAULT_SOURCE_LEFT}\n                                    onChange={(value) => this.onLeftSourceChange(value)}\n                                    onVariantChange={(value) => this.onLeftVariantChange(value)}/>\n                    <SourceSelector visible={this.state.showSourceSelector}\n                                    className=\"right-source-selector\"\n                                    defaultSource={DEFAULT_SOURCE_RIGHT}\n                                    onChange={(value) => this.onRightSourceChange(value)}\n                                    onVariantChange={(value) => this.onRightVariantChange(value)}/>\n                    <OffsetIndicator offset={this.state.rightVideoOffset}/>\n                    <Help visible={this.state.showHelp} onClick={() => this.toggleShowHelp()} />\n                    <HelpButton onClick={() => this.toggleShowHelp()} />\n                </HotKeys>\n            </div>\n\n        );\n    }\n}\n\nexport default VideoViewer;","export function openFullscreen(elem) {\n    if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) { /* Firefox */\n        elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n        elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) { /* IE/Edge */\n        elem.msRequestFullscreen();\n    }\n}\n\nexport function isFullscreen() {\n    return document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen;\n}\n\nexport function closeFullscreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) { /* Firefox */\n        document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n        document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) { /* IE/Edge */\n        document.msExitFullscreen();\n    }\n}\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport VideoViewer from './components/VideoViewer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <VideoViewer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}